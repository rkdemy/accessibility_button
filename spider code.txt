const spiders = Array.from({ length: 2 }, spawn); // Create 2 spiders
addEventListener("pointermove", (e) => {
 spiders.forEach((spider) => {
 spider.follow(e.clientX, e.clientY); // Make each spider follow the pointer
 });
});

let w = window.innerWidth;
let h = window.innerHeight;
const canvas = document.createElement("canvas");
const ctx = canvas.getContext("2d");
document.body.appendChild(canvas);

// Set up canvas size
canvas.width = w;
canvas.height = h;

function drawCircle(x, y, radius) {
 ctx.beginPath();
 ctx.arc(x, y, radius, 0, Math.PI * 2);
 ctx.fill();
}

function anim(t) {
 if (canvas.width !== innerWidth) w = canvas.width = innerWidth;
 if (canvas.height !== innerHeight) h = canvas.height = innerHeight;

 ctx.fillStyle = "#000"; // Background color
 ctx.fillRect(0, 0, w, h); // Fill the canvas with the background

 ctx.fillStyle = ctx.strokeStyle = "hashtag#fff"; // Circle and line color

 spiders.forEach((spider) => {
 spider.tick(t / 1000); // Update spider's position
 // You can use a custom method to render the spider here
 });

 requestAnimationFrame(anim);
}

// Start animation
requestAnimationFrame(anim);

// Placeholder for the `spawn` function and spider logic
function spawn() {
 return {
 x: Math.random() * w,
 y: Math.random() * h,
 follow(targetX, targetY) {
 this.x += (targetX - this.x) * 0.1;
 this.y += (targetY - this.y) * 0.1;
 },
 tick(deltaTime) {
 // Custom update logic
 drawCircle(this.x, this.y, 5); // Example: Draw a small circle for each spider
 },
 };
}